# -r: 表示该指令可以输入一次前缀就能一直使用
# -n: 表示该指令不需要指令前缀
# -g: 表示全局配置
#
#
#
#
# 系统快捷键
# 重新加载tmux配置文件
bind r source-file /etc/tmux.conf \; display-message "♻Tmux config reloaded..."
# 设置256色终端
set -g default-terminal "tmux-256color"
# 修改指令前缀C-a
unbind C-b
set -g prefix C-a
# 设置回滚行数
set -g history-limit 10000
# 设置窗口的起始下标为1
set -g base-index 1
# 设置面板的起始下标为1
set -g pane-base-index 1
# 关闭默认的rename机制
setw -g automatic-rename off
setw -g allow-rename off
# 窗口活动通知
setw -g monitor-activity on
set -g visual-activity on

# 状态栏
#
# 设置状态栏刷新时间间隔
set -g status-interval 3
# 设置背景透明
set -g status-bg default
set -g message-style "fg=#FFCC00"                   # 黄色
# 状态左栏
set -g status-left-length 20
set -g status-left '#[fg=#AF3FFF][#S]#[fg=#32CD32]#I:#W.#[fg=#00DCDC]#P'    # 紫色，绿色，天蓝色
# 状态右栏
set -g status-right-length 60
set -g status-right '#[fg=#8787ff]#(bash /etc/tmux_mocp.sh)#[fg=white] %m/%d %A %H:%M'

# 窗口状态格式
# 窗口信息居中显示
set -g status-justify centre
set -wg window-status-format "#I:#W "
set -wg window-status-current-format "#I:#W#[fg=white]☯"
set -wg window-status-separator ""
set -wg window-status-style "fg=#6E6E6E"            # 灰色
set -wg window-status-current-style "fg=#32CD32"    # 绿色
set -wg window-status-last-style "fg=#AF3FFF"       # 紫色
# 设置活动面板边界前景色
set -g pane-active-border-fg '#6F00FF'              # 靛色

# 设置复制模式
set-window-option -g mode-keys vi   # 复制模式开启vi风格 
# before tmux 2.4
# bind -t vi-copy 'v' begin-selection # v进入复制选择
# bind -t vi-copy 'y' copy-selection  # y确认复制选择部分文本
# after tmux 2.4
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection
#
# 取消如下快捷键
# M-1~5是选择布局
unbind M-1
unbind M-2
unbind M-3
unbind M-4
unbind M-5
# n是下一个窗口，o是向下循环窗口，p是上一个窗口
unbind M-n
unbind M-o
unbind M-p
# PageUP是向上翻一页
unbind PPage
# 其他
unbind M





####################################
# 窗口快捷键
# 像标签一样使用窗口（不需要前缀指令）
unbind 'p'
unbind 'n'
bind -r H prev                      # 向前切换窗口
bind -r L next                      # 向后切换窗口

# 关闭当前窗口
unbind '&'
bind b confirm-before -p "kill-window #W? (y/n)⚠" kill-window

# 根据序号查找窗口
unbind "'"
bind g command-prompt -p 'window index:' "select-window -t ':%%'"





####################################
# 面板快捷键
# 新增面板
unbind '"'
bind 'v' splitw -v -c '#{pane_current_path}'    # prefix-v垂直方向新增面板，默认进入当前目录
unbind '%'
unbind '\;'
bind '\;' splitw -h -c '#{pane_current_path}'   # prefix-;水平方向新增面板，默认进入当前目录

# 将当前面板移动到新的窗口中打开
unbind '!'
bind n break-pane

# 取消绑定默认快捷键
unbind Up
unbind Down 
unbind Left
unbind Right
# 绑定hjkl键为面板切换的上下左右键
bind -r k select-pane -U    # 绑定k为↑
bind -r j select-pane -D    # 绑定j为↓
bind -r h select-pane -L    # 绑定h为←
bind -r l select-pane -R    # 绑定l为→

# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right
bind -r ^k resizep -U 5 # 绑定Ctrl+k为往↑调整面板边缘5个单元格
bind -r ^j resizep -D 5 # 绑定Ctrl+j为往↓调整面板边缘5个单元格
bind -r ^h resizep -L 5 # 绑定Ctrl+h为往←调整面板边缘5个单元格
bind -r ^l resizep -R 5 # 绑定Ctrl+l为往→调整面板边缘5个单元格





####################################
# 其他快捷键
# 绑定/键为在新的panel水平方向打开htop
bind '/' splitw -h 'exec htop'
# 绑定m键为在新的panel水平方向打开man
bind m command-prompt -p ☯man☯ "splitw -h 'exec man %%'"
# 绑定m键为在新的panel水平方向打开man
bind M command-prompt -p ☯man☯ "splitw -v 'exec man %%'"
# 绑定P键为开启日志功能，如下，面板的输出日志将存储到~/Log/tmux
bind P pipe-pane -o "cat >> ~/Log/tmux/#W.log" \; display "Toggled logging to ~/Log/tmux/#W.log"
# 绑定p键为在新的panel水平方向打开mocp
bind 'p' splitw -v 'exec mocp'
